name: "CD"

on:
  push:
    branches:
      - "main"
      - "perf/gha" # for tests
  pull_request:
    branches:
      - "main"

env:
  GO_VERSION: "1.22"
  PY_VERSION: "3.12"
  PY_DIST_DIRECTORY: "whl"

jobs:
  update-version:
    name: "Create tag based on version from the config"
    runs-on: ubuntu-latest

    outputs:
      from-config: ${{ steps.extract.outputs.version }}
      tag: ${{ steps.tag.outputs.new }}

    steps:
      - uses: actions/checkout@v4
      - name: "Extract version from config file"
        id: extract
        run: |
          v=$(grep -oP 'Version\s*=\s*"\K[^"]+' fext/config/config.go)
          echo "version=$v" >> "$GITHUB_OUTPUT"
      - name: "Setup git config"
        # Inside the container, git config is empty,
        # so we fill it similarly to the action initiator.
        run: |
          # Retrieve latest commit info
          latest_commit=$(git log -1 --pretty=format:"%an|%ae")
          IFS='|' read -r author_name author_email <<< "$latest_commit"
          # Setup git config
          git config --global user.email "$author_email"
          git config --global user.name "$author_name"
      - name: "Create tag"
        id: tag
        run: |
          tag="v${{ steps.extract.outputs.version }}"
          current_date=$(date +"%d %B %Y")
          # Create a new tag based on specified version
          git tag -a "$tag" -m "Release $tag of $current_date"
          git push origin "$tag"
          # Share tag to other jobs
          echo "new=$tag" >> "$GITHUB_OUTPUT"

  package:
    name: "Build and package into wheel format"
    runs-on: ${{ matrix.os }}
    needs:
      - update-version

    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            exe_file: "dist/fext"
            platform_tag: "manylinux_2_35_x86_64"
          - os: windows-latest
            exe_file: "dist/fext.exe"
            platform_tag: "win_amd64"

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: "Build application"
        run: |
          cd fext
          go build -o ${{ matrix.exe_file }}
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PY_VERSION }}
      - name: "debug ls"
        run: |
          ls -a
          ls dist -a
          ls /
      - name: "Packaging application"
        run: make build
        env:
          FEXT_PLATFORM_TAG: ${{ matrix.platform_tag }}
          FEXT_VERSION: ${{ needs.update-version.outputs.from-config }}
          FEXT_EXE_FILE: ${{ matrix.exe_file }}
      - name: "Transfer packages to next job"
        uses: actions/upload-artifact@v4
        with:
          name: "whl"
          path: ${{ env.PY_DIST_DIRECTORY }}

  publish:
    name: "Upload the built wheel packages to the corresponding GitHub release"
    runs-on: ubuntu-latest

    needs:
      - update-version
      - package

    steps:
      - name: "Download wheel packages"
        uses: actions/download-artifact@v4
        with:
          name: "whl"
      - name: "Upload packages into release"
        uses: svenstaro/upload-release-action@v2
        with:
         repo_token: ${{ secrets.GITHUB_TOKEN }}
         file: "${{ env.PY_DIST_DIRECTORY }}/*"
         file_glob: true
         tag: ${{ needs.update-version.outputs.tag }}
